////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : Div1k.vf
// /___/   /\     Timestamp : 11/19/2021 17:56:36
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog C:/Users/Parker/Documents/1-2564/Digi/Labs/7/Lab7stopwatch/Div1k.vf -w C:/Users/Parker/Documents/1-2564/Digi/Labs/7/Lab7stopwatch/Div1k.sch
//Design Name: Div1k
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 100 ps / 10 ps

module CD4CE_HXILINX_Div1k(CEO, Q0, Q1, Q2, Q3, TC, C, CE, CLR);
   
   parameter TERMINAL_COUNT = 4'b1001;
   
   output             CEO;
   output             Q0;
   output             Q1;
   output             Q2;
   output             Q3;
   output             TC;

   input 	      C;	
   input 	      CE;	
   input 	      CLR;	
   
   reg                Q0;
   reg                Q1;
   reg                Q2;
   reg                Q3;
   
   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  {Q3, Q2, Q1, Q0} <= 4'b0000;

	else if (CE)
          begin
             if ({Q3,Q2,Q1,Q0} == 4'b1001)
               {Q3,Q2,Q1,Q0} <= 4'b0000;
             else if({Q3,Q2,Q1,Q0} == 4'b1011)
               {Q3,Q2,Q1,Q0} <= 4'b0110;
             else if({Q3,Q2,Q1,Q0} == 4'b1101)
               {Q3,Q2,Q1,Q0} <= 4'b0100;
             else if({Q3,Q2,Q1,Q0} == 4'b1111)
               {Q3,Q2,Q1,Q0} <= 4'b0010;
            
             else
	      {Q3, Q2, Q1,Q0} <= {Q3, Q2, Q1,Q0} + 1;
          end
     end
   
   assign CEO = TC & CE;
   assign TC = CLR ? 1'b0 : ({Q3, Q2, Q1, Q0} == TERMINAL_COUNT);
   
endmodule
`timescale 1ns / 1ps

module Div1k(CLK_in, 
             CLK_out2);

    input CLK_in;
   output CLK_out2;
   
   wire XLXN_1;
   wire XLXN_3;
   wire XLXN_8;
   wire XLXN_9;
   
   (* HU_SET = "XLXI_11_0" *) 
   CD4CE_HXILINX_Div1k  XLXI_11 (.C(CLK_in), 
                                .CE(XLXN_1), 
                                .CLR(XLXN_3), 
                                .CEO(XLXN_9), 
                                .Q0(), 
                                .Q1(), 
                                .Q2(), 
                                .Q3(), 
                                .TC());
   (* HU_SET = "XLXI_12_1" *) 
   CD4CE_HXILINX_Div1k  XLXI_12 (.C(CLK_in), 
                                .CE(XLXN_9), 
                                .CLR(XLXN_3), 
                                .CEO(XLXN_8), 
                                .Q0(), 
                                .Q1(), 
                                .Q2(), 
                                .Q3(), 
                                .TC());
   (* HU_SET = "XLXI_13_2" *) 
   CD4CE_HXILINX_Div1k  XLXI_13 (.C(CLK_in), 
                                .CE(XLXN_8), 
                                .CLR(XLXN_3), 
                                .CEO(), 
                                .Q0(), 
                                .Q1(), 
                                .Q2(), 
                                .Q3(), 
                                .TC(CLK_out2));
   VCC  XLXI_14 (.P(XLXN_1));
   GND  XLXI_15 (.G(XLXN_3));
endmodule
