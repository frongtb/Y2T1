////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : Div20k_drc.vf
// /___/   /\     Timestamp : 11/19/2021 16:29:28
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: C:\Xilinx\14.7\ISE_DS\ISE\bin\nt64\unwrapped\sch2hdl.exe -intstyle ise -family spartan6 -verilog Div20k_drc.vf -w C:/Users/Parker/Documents/1-2564/Digi/Labs/7/Lab7stopwatch/Div20k.sch
//Design Name: Div20k
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 100 ps / 10 ps

module CD4CE_HXILINX_Div20k(CEO, Q0, Q1, Q2, Q3, TC, C, CE, CLR);
   
   parameter TERMINAL_COUNT = 4'b1001;
   
   output             CEO;
   output             Q0;
   output             Q1;
   output             Q2;
   output             Q3;
   output             TC;

   input 	      C;	
   input 	      CE;	
   input 	      CLR;	
   
   reg                Q0;
   reg                Q1;
   reg                Q2;
   reg                Q3;
   
   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  {Q3, Q2, Q1, Q0} <= 4'b0000;

	else if (CE)
          begin
             if ({Q3,Q2,Q1,Q0} == 4'b1001)
               {Q3,Q2,Q1,Q0} <= 4'b0000;
             else if({Q3,Q2,Q1,Q0} == 4'b1011)
               {Q3,Q2,Q1,Q0} <= 4'b0110;
             else if({Q3,Q2,Q1,Q0} == 4'b1101)
               {Q3,Q2,Q1,Q0} <= 4'b0100;
             else if({Q3,Q2,Q1,Q0} == 4'b1111)
               {Q3,Q2,Q1,Q0} <= 4'b0010;
            
             else
	      {Q3, Q2, Q1,Q0} <= {Q3, Q2, Q1,Q0} + 1;
          end
     end
   
   assign CEO = TC & CE;
   assign TC = CLR ? 1'b0 : ({Q3, Q2, Q1, Q0} == TERMINAL_COUNT);
   
endmodule
`timescale 100 ps / 10 ps

module FTCE_HXILINX_Div20k(Q, C, CE, CLR, T);
   
   output             Q;

   input 	      C;	
   input 	      CE;	
   input 	      CLR;	
   input              T;
   
   parameter INIT = 1'b0;
   reg                Q = INIT;

   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  Q <= 1'b0;
	else if(CE) 
          if(T)
            Q <= !Q;
     end
   
endmodule
`timescale 1ns / 1ps

module Div20k(CLK_in, 
              CLK_out);

    input CLK_in;
   output CLK_out;
   
   wire XLXN_1;
   wire XLXN_9;
   wire XLXN_11;
   wire XLXN_12;
   wire XLXN_13;
   wire XLXN_14;
   
   (* HU_SET = "XLXI_1_0" *) 
   CD4CE_HXILINX_Div20k  XLXI_1 (.C(CLK_in), 
                                .CE(XLXN_1), 
                                .CLR(XLXN_9), 
                                .CEO(XLXN_14), 
                                .Q0(), 
                                .Q1(), 
                                .Q2(), 
                                .Q3(), 
                                .TC());
   (* HU_SET = "XLXI_2_1" *) 
   CD4CE_HXILINX_Div20k  XLXI_2 (.C(CLK_in), 
                                .CE(XLXN_14), 
                                .CLR(XLXN_9), 
                                .CEO(XLXN_13), 
                                .Q0(), 
                                .Q1(), 
                                .Q2(), 
                                .Q3(), 
                                .TC());
   (* HU_SET = "XLXI_3_2" *) 
   CD4CE_HXILINX_Div20k  XLXI_3 (.C(CLK_in), 
                                .CE(XLXN_13), 
                                .CLR(XLXN_9), 
                                .CEO(XLXN_12), 
                                .Q0(), 
                                .Q1(), 
                                .Q2(), 
                                .Q3(), 
                                .TC());
   (* HU_SET = "XLXI_4_3" *) 
   CD4CE_HXILINX_Div20k  XLXI_4 (.C(CLK_in), 
                                .CE(XLXN_12), 
                                .CLR(XLXN_9), 
                                .CEO(XLXN_11), 
                                .Q0(), 
                                .Q1(), 
                                .Q2(), 
                                .Q3(), 
                                .TC());
   VCC  XLXI_6 (.P(XLXN_1));
   GND  XLXI_7 (.G(XLXN_9));
   (* HU_SET = "XLXI_8_4" *) 
   FTCE_HXILINX_Div20k  XLXI_8 (.C(CLK_in), 
                               .CE(XLXN_11), 
                               .CLR(XLXN_9), 
                               .T(XLXN_11), 
                               .Q(CLK_out));
endmodule
